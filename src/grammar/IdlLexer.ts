// Generated from ./grammar/IdlLexer.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class IdlLexer extends Lexer {
	public static readonly DOC_BEGIN = 1;
	public static readonly DOC_END = 2;
	public static readonly DOC_TEXT = 3;
	public static readonly COMMERCIAL_TAG = 4;
	public static readonly INTERNAL_TAG = 5;
	public static readonly DEPRECATED_TAG = 6;
	public static readonly UNDOCUMENTED_TAG = 7;
	public static readonly LINK_TAG_BEGIN = 8;
	public static readonly LINK_TAG_END = 9;
	public static readonly PARAM_TAG = 10;
	public static readonly RETURN_TAG = 11;
	public static readonly LBRACE = 12;
	public static readonly RBRACE = 13;
	public static readonly LPAREN = 14;
	public static readonly RPAREN = 15;
	public static readonly COMMA = 16;
	public static readonly DOT = 17;
	public static readonly COLON = 18;
	public static readonly SEMICOLON = 19;
	public static readonly LANGLE = 20;
	public static readonly RANGLE = 21;
	public static readonly NUM = 22;
	public static readonly CPP = 23;
	public static readonly JAVA = 24;
	public static readonly KMP = 25;
	public static readonly OBJC = 26;
	public static readonly SWIFT = 27;
	public static readonly DART = 28;
	public static readonly PROTOCONV = 29;
	public static readonly TYPE_PREFIX = 30;
	public static readonly IMPORT = 31;
	public static readonly CONST = 32;
	public static readonly OPTIONAL = 33;
	public static readonly BG_THREAD = 34;
	public static readonly ANY_THREAD = 35;
	public static readonly BASED_ON = 36;
	public static readonly SERIALIZABLE = 37;
	public static readonly ENUM = 38;
	public static readonly BITFIELD = 39;
	public static readonly VARIANT = 40;
	public static readonly STRUCT = 41;
	public static readonly LITE = 42;
	public static readonly OPTIONS = 43;
	public static readonly ABSTRACT = 44;
	public static readonly INTERFACE = 45;
	public static readonly VIRTUAL = 46;
	public static readonly VIEW_DELEGATE = 47;
	public static readonly WEAK_REF = 48;
	public static readonly SHARED_REF = 49;
	public static readonly GEN = 50;
	public static readonly READONLY = 51;
	public static readonly NATIVE = 52;
	public static readonly STATIC = 53;
	public static readonly LISTENER = 54;
	public static readonly LAMBDA = 55;
	public static readonly STRONG_REF = 56;
	public static readonly PLATFORM = 57;
	public static readonly ASSIGN = 58;
	public static readonly LSHIFT = 59;
	public static readonly BINOR = 60;
	public static readonly INT_LITERAL = 61;
	public static readonly FLOAT_LITERAL = 62;
	public static readonly DOUBLE_LITERAL = 63;
	public static readonly STR_LITERAL = 64;
	public static readonly BOOL_LITERAL = 65;
	public static readonly NEWLINE = 66;
	public static readonly SPACE = 67;
	public static readonly IDENTIFIER = 68;
	public static readonly LINK_SPACE = 69;
	public static readonly SINGLE_COMMERCIAL = 70;
	public static readonly SINGLE_INTERNAL = 71;
	public static readonly SINGLE_DEPRECATED = 72;
	public static readonly SINGLE_UNDOCUMENTED = 73;
	public static readonly SINGLE_RETURN = 74;
	public static readonly MULTI_END_COMMENT = 75;
	public static readonly EOF = Token.EOF;
	public static readonly SINGLE_LINE_DOC = 1;
	public static readonly MULTI_LINE_DOC = 2;
	public static readonly DOC_LINK = 3;
	public static readonly DOC_PARAM = 4;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            "':'", "';'", 
                                                            "'<'", "'>'", 
                                                            null, "'cpp'", 
                                                            "'java'", "'kmp'", 
                                                            "'objc'", "'swift'", 
                                                            "'dart'", "'protoconv'", 
                                                            "'type_prefix'", 
                                                            "'import'", 
                                                            "'const'", "'optional'", 
                                                            "'bg_thread'", 
                                                            "'any_thread'", 
                                                            "'based on'", 
                                                            "'serializable'", 
                                                            "'enum'", "'bitfield'", 
                                                            "'variant'", 
                                                            "'struct'", 
                                                            "'lite'", "'options'", 
                                                            "'abstract'", 
                                                            "'interface'", 
                                                            "'virtual'", 
                                                            "'view_delegate'", 
                                                            "'weak_ref'", 
                                                            "'shared_ref'", 
                                                            "'gen'", "'readonly'", 
                                                            "'native'", 
                                                            "'static'", 
                                                            "'listener'", 
                                                            "'lambda'", 
                                                            "'strong_ref'", 
                                                            "'platform'", 
                                                            "'='", "'<<'", 
                                                            "'|'", null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, "'*/'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "DOC_BEGIN", 
                                                             "DOC_END", 
                                                             "DOC_TEXT", 
                                                             "COMMERCIAL_TAG", 
                                                             "INTERNAL_TAG", 
                                                             "DEPRECATED_TAG", 
                                                             "UNDOCUMENTED_TAG", 
                                                             "LINK_TAG_BEGIN", 
                                                             "LINK_TAG_END", 
                                                             "PARAM_TAG", 
                                                             "RETURN_TAG", 
                                                             "LBRACE", "RBRACE", 
                                                             "LPAREN", "RPAREN", 
                                                             "COMMA", "DOT", 
                                                             "COLON", "SEMICOLON", 
                                                             "LANGLE", "RANGLE", 
                                                             "NUM", "CPP", 
                                                             "JAVA", "KMP", 
                                                             "OBJC", "SWIFT", 
                                                             "DART", "PROTOCONV", 
                                                             "TYPE_PREFIX", 
                                                             "IMPORT", "CONST", 
                                                             "OPTIONAL", 
                                                             "BG_THREAD", 
                                                             "ANY_THREAD", 
                                                             "BASED_ON", 
                                                             "SERIALIZABLE", 
                                                             "ENUM", "BITFIELD", 
                                                             "VARIANT", 
                                                             "STRUCT", "LITE", 
                                                             "OPTIONS", 
                                                             "ABSTRACT", 
                                                             "INTERFACE", 
                                                             "VIRTUAL", 
                                                             "VIEW_DELEGATE", 
                                                             "WEAK_REF", 
                                                             "SHARED_REF", 
                                                             "GEN", "READONLY", 
                                                             "NATIVE", "STATIC", 
                                                             "LISTENER", 
                                                             "LAMBDA", "STRONG_REF", 
                                                             "PLATFORM", 
                                                             "ASSIGN", "LSHIFT", 
                                                             "BINOR", "INT_LITERAL", 
                                                             "FLOAT_LITERAL", 
                                                             "DOUBLE_LITERAL", 
                                                             "STR_LITERAL", 
                                                             "BOOL_LITERAL", 
                                                             "NEWLINE", 
                                                             "SPACE", "IDENTIFIER", 
                                                             "LINK_SPACE", 
                                                             "SINGLE_COMMERCIAL", 
                                                             "SINGLE_INTERNAL", 
                                                             "SINGLE_DEPRECATED", 
                                                             "SINGLE_UNDOCUMENTED", 
                                                             "SINGLE_RETURN", 
                                                             "MULTI_END_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", "SINGLE_LINE_DOC", 
                                                "MULTI_LINE_DOC", "DOC_LINK", 
                                                "DOC_PARAM", ];

	public static readonly ruleNames: string[] = [
		"LBRACE", "RBRACE", "LPAREN", "RPAREN", "COMMA", "DOT", "COLON", "SEMICOLON", 
		"LANGLE", "RANGLE", "NUM", "CPP", "JAVA", "KMP", "OBJC", "SWIFT", "DART", 
		"PROTOCONV", "TYPE_PREFIX", "IMPORT", "CONST", "OPTIONAL", "BG_THREAD", 
		"ANY_THREAD", "BASED_ON", "SERIALIZABLE", "ENUM", "BITFIELD", "VARIANT", 
		"STRUCT", "LITE", "OPTIONS", "ABSTRACT", "INTERFACE", "VIRTUAL", "VIEW_DELEGATE", 
		"WEAK_REF", "SHARED_REF", "GEN", "READONLY", "NATIVE", "STATIC", "LISTENER", 
		"LAMBDA", "STRONG_REF", "PLATFORM", "ASSIGN", "LSHIFT", "BINOR", "INT_LITERAL", 
		"FLOAT_LITERAL", "DOUBLE_LITERAL", "STR_LITERAL", "BOOL_LITERAL", "SINGLE_LINE_DOC_BEGIN", 
		"MULTI_LINE_DOC_BEGIN", "NEWLINE", "SPACE", "IDENTIFIER", "SINGLE_END_COMMENT", 
		"SINGLE_COMMERCIAL", "SINGLE_INTERNAL", "SINGLE_DEPRECATED", "SINGLE_UNDOCUMENTED", 
		"SINGLE_LINK", "SINGLE_PARAM", "SINGLE_RETURN", "SINGLE_LBRACE", "SINGLE_RBRACE", 
		"SINGLE_LPAREN", "SINGLE_RPAREN", "SINGLE_NUM", "SINGLE_TEXT", "SINGLE_IDENTIFIER", 
		"SIGNLE_SYMBOL", "MULTI_END_COMMENT", "MULTI_COMMERCIAL", "MULTI_INTERNAL", 
		"MULTI_DEPRECATED", "MULTI_UNDOCUMENTED", "MULTI_LINK", "MULTI_PARAM", 
		"MULTI_RETURN", "MULTI_TEXT", "MULTI_SYMBOL", "LINK_IDENTIFIER", "LINK_DOT", 
		"LINK_NUM", "LINK_LPAREN", "LINK_RPAREN", "LINK_COMMA", "LINK_END", "LINK_SPACE", 
		"PARAM_IDENTIFIER",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, IdlLexer._ATN, IdlLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "IdlLexer.g4"; }

	public get literalNames(): (string | null)[] { return IdlLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return IdlLexer.symbolicNames; }
	public get ruleNames(): string[] { return IdlLexer.ruleNames; }

	public get serializedATN(): number[] { return IdlLexer._serializedATN; }

	public get channelNames(): string[] { return IdlLexer.channelNames; }

	public get modeNames(): string[] { return IdlLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,75,915,6,-1,6,-1,
	6,-1,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,
	2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,
	14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,
	2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,
	29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,
	7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,
	43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,
	2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,
	58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,
	7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,2,72,7,
	72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,78,7,78,2,79,7,79,
	2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,7,85,2,86,7,86,2,
	87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,92,2,93,7,93,1,0,
	1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,
	1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,
	13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,
	1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,
	18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,
	1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,
	1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,
	24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,
	1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,
	27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,
	1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,
	31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,
	1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,
	35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,
	1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,
	37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,
	1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,
	41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,
	1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,
	44,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,47,1,47,1,47,
	1,48,1,48,1,49,3,49,506,8,49,1,49,4,49,509,8,49,11,49,12,49,510,1,49,1,
	49,1,49,1,49,4,49,517,8,49,11,49,12,49,518,3,49,521,8,49,1,50,3,50,524,
	8,50,1,50,4,50,527,8,50,11,50,12,50,528,1,50,1,50,5,50,533,8,50,10,50,12,
	50,536,9,50,1,50,1,50,5,50,540,8,50,10,50,12,50,543,9,50,1,50,1,50,4,50,
	547,8,50,11,50,12,50,548,1,50,3,50,552,8,50,1,51,3,51,555,8,51,1,51,4,51,
	558,8,51,11,51,12,51,559,1,51,1,51,5,51,564,8,51,10,51,12,51,567,9,51,1,
	51,5,51,570,8,51,10,51,12,51,573,9,51,1,51,1,51,4,51,577,8,51,11,51,12,
	51,578,3,51,581,8,51,1,52,1,52,5,52,585,8,52,10,52,12,52,588,9,52,1,52,
	1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,3,53,602,8,53,1,
	54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,56,4,56,617,
	8,56,11,56,12,56,618,1,56,1,56,1,57,1,57,1,57,1,57,1,58,1,58,5,58,629,8,
	58,10,58,12,58,632,9,58,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,
	60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,
	1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,
	62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,
	1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,
	64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,65,1,66,
	1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,68,1,
	68,1,68,1,68,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,
	1,72,4,72,746,8,72,11,72,12,72,747,1,72,1,72,1,73,1,73,5,73,754,8,73,10,
	73,12,73,757,9,73,1,73,1,73,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,
	1,75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,
	76,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,77,1,78,1,78,
	1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,
	79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,80,
	1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,
	81,1,81,1,81,1,81,1,81,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,82,
	1,83,4,83,858,8,83,11,83,12,83,859,1,83,1,83,1,84,1,84,1,84,1,84,1,85,1,
	85,5,85,870,8,85,10,85,12,85,873,9,85,1,85,1,85,1,86,1,86,1,86,1,86,1,87,
	1,87,1,87,1,87,1,88,1,88,1,88,1,88,1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,
	90,1,91,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,93,1,93,5,93,908,8,93,
	10,93,12,93,911,9,93,1,93,1,93,1,93,1,586,0,94,5,12,7,13,9,14,11,15,13,
	16,15,17,17,18,19,19,21,20,23,21,25,22,27,23,29,24,31,25,33,26,35,27,37,
	28,39,29,41,30,43,31,45,32,47,33,49,34,51,35,53,36,55,37,57,38,59,39,61,
	40,63,41,65,42,67,43,69,44,71,45,73,46,75,47,77,48,79,49,81,50,83,51,85,
	52,87,53,89,54,91,55,93,56,95,57,97,58,99,59,101,60,103,61,105,62,107,63,
	109,64,111,65,113,0,115,0,117,66,119,67,121,68,123,0,125,70,127,71,129,
	72,131,73,133,0,135,0,137,74,139,0,141,0,143,0,145,0,147,0,149,0,151,0,
	153,0,155,75,157,0,159,0,161,0,163,0,165,0,167,0,169,0,171,0,173,0,175,
	0,177,0,179,0,181,0,183,0,185,0,187,0,189,69,191,0,5,0,1,2,3,4,9,1,0,48,
	57,3,0,48,57,65,70,97,102,1,0,92,92,2,0,10,10,13,13,2,0,9,9,32,32,3,0,65,
	90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,5,0,10,10,13,13,40,41,63,64,
	123,123,6,0,10,10,13,13,40,42,47,47,63,64,123,124,935,0,5,1,0,0,0,0,7,1,
	0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,
	19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,
	0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,
	41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
	0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,
	63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
	0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,
	85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,
	0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,
	0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,
	117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,1,123,1,0,0,0,1,125,1,0,0,0,1,127,
	1,0,0,0,1,129,1,0,0,0,1,131,1,0,0,0,1,133,1,0,0,0,1,135,1,0,0,0,1,137,1,
	0,0,0,1,139,1,0,0,0,1,141,1,0,0,0,1,143,1,0,0,0,1,145,1,0,0,0,1,147,1,0,
	0,0,1,149,1,0,0,0,1,151,1,0,0,0,1,153,1,0,0,0,2,155,1,0,0,0,2,157,1,0,0,
	0,2,159,1,0,0,0,2,161,1,0,0,0,2,163,1,0,0,0,2,165,1,0,0,0,2,167,1,0,0,0,
	2,169,1,0,0,0,2,171,1,0,0,0,2,173,1,0,0,0,3,175,1,0,0,0,3,177,1,0,0,0,3,
	179,1,0,0,0,3,181,1,0,0,0,3,183,1,0,0,0,3,185,1,0,0,0,3,187,1,0,0,0,3,189,
	1,0,0,0,4,191,1,0,0,0,5,193,1,0,0,0,7,195,1,0,0,0,9,197,1,0,0,0,11,199,
	1,0,0,0,13,201,1,0,0,0,15,203,1,0,0,0,17,205,1,0,0,0,19,207,1,0,0,0,21,
	209,1,0,0,0,23,211,1,0,0,0,25,213,1,0,0,0,27,215,1,0,0,0,29,219,1,0,0,0,
	31,224,1,0,0,0,33,228,1,0,0,0,35,233,1,0,0,0,37,239,1,0,0,0,39,244,1,0,
	0,0,41,254,1,0,0,0,43,266,1,0,0,0,45,273,1,0,0,0,47,279,1,0,0,0,49,288,
	1,0,0,0,51,298,1,0,0,0,53,309,1,0,0,0,55,318,1,0,0,0,57,331,1,0,0,0,59,
	336,1,0,0,0,61,345,1,0,0,0,63,353,1,0,0,0,65,360,1,0,0,0,67,365,1,0,0,0,
	69,373,1,0,0,0,71,382,1,0,0,0,73,392,1,0,0,0,75,400,1,0,0,0,77,414,1,0,
	0,0,79,423,1,0,0,0,81,434,1,0,0,0,83,438,1,0,0,0,85,447,1,0,0,0,87,454,
	1,0,0,0,89,461,1,0,0,0,91,470,1,0,0,0,93,477,1,0,0,0,95,488,1,0,0,0,97,
	497,1,0,0,0,99,499,1,0,0,0,101,502,1,0,0,0,103,520,1,0,0,0,105,551,1,0,
	0,0,107,580,1,0,0,0,109,582,1,0,0,0,111,601,1,0,0,0,113,603,1,0,0,0,115,
	609,1,0,0,0,117,616,1,0,0,0,119,622,1,0,0,0,121,626,1,0,0,0,123,633,1,0,
	0,0,125,638,1,0,0,0,127,652,1,0,0,0,129,664,1,0,0,0,131,678,1,0,0,0,133,
	694,1,0,0,0,135,704,1,0,0,0,137,714,1,0,0,0,139,724,1,0,0,0,141,728,1,0,
	0,0,143,732,1,0,0,0,145,736,1,0,0,0,147,740,1,0,0,0,149,745,1,0,0,0,151,
	751,1,0,0,0,153,760,1,0,0,0,155,764,1,0,0,0,157,770,1,0,0,0,159,784,1,0,
	0,0,161,796,1,0,0,0,163,810,1,0,0,0,165,826,1,0,0,0,167,836,1,0,0,0,169,
	846,1,0,0,0,171,857,1,0,0,0,173,863,1,0,0,0,175,867,1,0,0,0,177,876,1,0,
	0,0,179,880,1,0,0,0,181,884,1,0,0,0,183,888,1,0,0,0,185,892,1,0,0,0,187,
	896,1,0,0,0,189,901,1,0,0,0,191,905,1,0,0,0,193,194,5,123,0,0,194,6,1,0,
	0,0,195,196,5,125,0,0,196,8,1,0,0,0,197,198,5,40,0,0,198,10,1,0,0,0,199,
	200,5,41,0,0,200,12,1,0,0,0,201,202,5,44,0,0,202,14,1,0,0,0,203,204,5,46,
	0,0,204,16,1,0,0,0,205,206,5,58,0,0,206,18,1,0,0,0,207,208,5,59,0,0,208,
	20,1,0,0,0,209,210,5,60,0,0,210,22,1,0,0,0,211,212,5,62,0,0,212,24,1,0,
	0,0,213,214,5,35,0,0,214,26,1,0,0,0,215,216,5,99,0,0,216,217,5,112,0,0,
	217,218,5,112,0,0,218,28,1,0,0,0,219,220,5,106,0,0,220,221,5,97,0,0,221,
	222,5,118,0,0,222,223,5,97,0,0,223,30,1,0,0,0,224,225,5,107,0,0,225,226,
	5,109,0,0,226,227,5,112,0,0,227,32,1,0,0,0,228,229,5,111,0,0,229,230,5,
	98,0,0,230,231,5,106,0,0,231,232,5,99,0,0,232,34,1,0,0,0,233,234,5,115,
	0,0,234,235,5,119,0,0,235,236,5,105,0,0,236,237,5,102,0,0,237,238,5,116,
	0,0,238,36,1,0,0,0,239,240,5,100,0,0,240,241,5,97,0,0,241,242,5,114,0,0,
	242,243,5,116,0,0,243,38,1,0,0,0,244,245,5,112,0,0,245,246,5,114,0,0,246,
	247,5,111,0,0,247,248,5,116,0,0,248,249,5,111,0,0,249,250,5,99,0,0,250,
	251,5,111,0,0,251,252,5,110,0,0,252,253,5,118,0,0,253,40,1,0,0,0,254,255,
	5,116,0,0,255,256,5,121,0,0,256,257,5,112,0,0,257,258,5,101,0,0,258,259,
	5,95,0,0,259,260,5,112,0,0,260,261,5,114,0,0,261,262,5,101,0,0,262,263,
	5,102,0,0,263,264,5,105,0,0,264,265,5,120,0,0,265,42,1,0,0,0,266,267,5,
	105,0,0,267,268,5,109,0,0,268,269,5,112,0,0,269,270,5,111,0,0,270,271,5,
	114,0,0,271,272,5,116,0,0,272,44,1,0,0,0,273,274,5,99,0,0,274,275,5,111,
	0,0,275,276,5,110,0,0,276,277,5,115,0,0,277,278,5,116,0,0,278,46,1,0,0,
	0,279,280,5,111,0,0,280,281,5,112,0,0,281,282,5,116,0,0,282,283,5,105,0,
	0,283,284,5,111,0,0,284,285,5,110,0,0,285,286,5,97,0,0,286,287,5,108,0,
	0,287,48,1,0,0,0,288,289,5,98,0,0,289,290,5,103,0,0,290,291,5,95,0,0,291,
	292,5,116,0,0,292,293,5,104,0,0,293,294,5,114,0,0,294,295,5,101,0,0,295,
	296,5,97,0,0,296,297,5,100,0,0,297,50,1,0,0,0,298,299,5,97,0,0,299,300,
	5,110,0,0,300,301,5,121,0,0,301,302,5,95,0,0,302,303,5,116,0,0,303,304,
	5,104,0,0,304,305,5,114,0,0,305,306,5,101,0,0,306,307,5,97,0,0,307,308,
	5,100,0,0,308,52,1,0,0,0,309,310,5,98,0,0,310,311,5,97,0,0,311,312,5,115,
	0,0,312,313,5,101,0,0,313,314,5,100,0,0,314,315,5,32,0,0,315,316,5,111,
	0,0,316,317,5,110,0,0,317,54,1,0,0,0,318,319,5,115,0,0,319,320,5,101,0,
	0,320,321,5,114,0,0,321,322,5,105,0,0,322,323,5,97,0,0,323,324,5,108,0,
	0,324,325,5,105,0,0,325,326,5,122,0,0,326,327,5,97,0,0,327,328,5,98,0,0,
	328,329,5,108,0,0,329,330,5,101,0,0,330,56,1,0,0,0,331,332,5,101,0,0,332,
	333,5,110,0,0,333,334,5,117,0,0,334,335,5,109,0,0,335,58,1,0,0,0,336,337,
	5,98,0,0,337,338,5,105,0,0,338,339,5,116,0,0,339,340,5,102,0,0,340,341,
	5,105,0,0,341,342,5,101,0,0,342,343,5,108,0,0,343,344,5,100,0,0,344,60,
	1,0,0,0,345,346,5,118,0,0,346,347,5,97,0,0,347,348,5,114,0,0,348,349,5,
	105,0,0,349,350,5,97,0,0,350,351,5,110,0,0,351,352,5,116,0,0,352,62,1,0,
	0,0,353,354,5,115,0,0,354,355,5,116,0,0,355,356,5,114,0,0,356,357,5,117,
	0,0,357,358,5,99,0,0,358,359,5,116,0,0,359,64,1,0,0,0,360,361,5,108,0,0,
	361,362,5,105,0,0,362,363,5,116,0,0,363,364,5,101,0,0,364,66,1,0,0,0,365,
	366,5,111,0,0,366,367,5,112,0,0,367,368,5,116,0,0,368,369,5,105,0,0,369,
	370,5,111,0,0,370,371,5,110,0,0,371,372,5,115,0,0,372,68,1,0,0,0,373,374,
	5,97,0,0,374,375,5,98,0,0,375,376,5,115,0,0,376,377,5,116,0,0,377,378,5,
	114,0,0,378,379,5,97,0,0,379,380,5,99,0,0,380,381,5,116,0,0,381,70,1,0,
	0,0,382,383,5,105,0,0,383,384,5,110,0,0,384,385,5,116,0,0,385,386,5,101,
	0,0,386,387,5,114,0,0,387,388,5,102,0,0,388,389,5,97,0,0,389,390,5,99,0,
	0,390,391,5,101,0,0,391,72,1,0,0,0,392,393,5,118,0,0,393,394,5,105,0,0,
	394,395,5,114,0,0,395,396,5,116,0,0,396,397,5,117,0,0,397,398,5,97,0,0,
	398,399,5,108,0,0,399,74,1,0,0,0,400,401,5,118,0,0,401,402,5,105,0,0,402,
	403,5,101,0,0,403,404,5,119,0,0,404,405,5,95,0,0,405,406,5,100,0,0,406,
	407,5,101,0,0,407,408,5,108,0,0,408,409,5,101,0,0,409,410,5,103,0,0,410,
	411,5,97,0,0,411,412,5,116,0,0,412,413,5,101,0,0,413,76,1,0,0,0,414,415,
	5,119,0,0,415,416,5,101,0,0,416,417,5,97,0,0,417,418,5,107,0,0,418,419,
	5,95,0,0,419,420,5,114,0,0,420,421,5,101,0,0,421,422,5,102,0,0,422,78,1,
	0,0,0,423,424,5,115,0,0,424,425,5,104,0,0,425,426,5,97,0,0,426,427,5,114,
	0,0,427,428,5,101,0,0,428,429,5,100,0,0,429,430,5,95,0,0,430,431,5,114,
	0,0,431,432,5,101,0,0,432,433,5,102,0,0,433,80,1,0,0,0,434,435,5,103,0,
	0,435,436,5,101,0,0,436,437,5,110,0,0,437,82,1,0,0,0,438,439,5,114,0,0,
	439,440,5,101,0,0,440,441,5,97,0,0,441,442,5,100,0,0,442,443,5,111,0,0,
	443,444,5,110,0,0,444,445,5,108,0,0,445,446,5,121,0,0,446,84,1,0,0,0,447,
	448,5,110,0,0,448,449,5,97,0,0,449,450,5,116,0,0,450,451,5,105,0,0,451,
	452,5,118,0,0,452,453,5,101,0,0,453,86,1,0,0,0,454,455,5,115,0,0,455,456,
	5,116,0,0,456,457,5,97,0,0,457,458,5,116,0,0,458,459,5,105,0,0,459,460,
	5,99,0,0,460,88,1,0,0,0,461,462,5,108,0,0,462,463,5,105,0,0,463,464,5,115,
	0,0,464,465,5,116,0,0,465,466,5,101,0,0,466,467,5,110,0,0,467,468,5,101,
	0,0,468,469,5,114,0,0,469,90,1,0,0,0,470,471,5,108,0,0,471,472,5,97,0,0,
	472,473,5,109,0,0,473,474,5,98,0,0,474,475,5,100,0,0,475,476,5,97,0,0,476,
	92,1,0,0,0,477,478,5,115,0,0,478,479,5,116,0,0,479,480,5,114,0,0,480,481,
	5,111,0,0,481,482,5,110,0,0,482,483,5,103,0,0,483,484,5,95,0,0,484,485,
	5,114,0,0,485,486,5,101,0,0,486,487,5,102,0,0,487,94,1,0,0,0,488,489,5,
	112,0,0,489,490,5,108,0,0,490,491,5,97,0,0,491,492,5,116,0,0,492,493,5,
	102,0,0,493,494,5,111,0,0,494,495,5,114,0,0,495,496,5,109,0,0,496,96,1,
	0,0,0,497,498,5,61,0,0,498,98,1,0,0,0,499,500,5,60,0,0,500,501,5,60,0,0,
	501,100,1,0,0,0,502,503,5,124,0,0,503,102,1,0,0,0,504,506,5,45,0,0,505,
	504,1,0,0,0,505,506,1,0,0,0,506,508,1,0,0,0,507,509,7,0,0,0,508,507,1,0,
	0,0,509,510,1,0,0,0,510,508,1,0,0,0,510,511,1,0,0,0,511,521,1,0,0,0,512,
	513,5,48,0,0,513,514,5,120,0,0,514,516,1,0,0,0,515,517,7,1,0,0,516,515,
	1,0,0,0,517,518,1,0,0,0,518,516,1,0,0,0,518,519,1,0,0,0,519,521,1,0,0,0,
	520,505,1,0,0,0,520,512,1,0,0,0,521,104,1,0,0,0,522,524,5,45,0,0,523,522,
	1,0,0,0,523,524,1,0,0,0,524,526,1,0,0,0,525,527,7,0,0,0,526,525,1,0,0,0,
	527,528,1,0,0,0,528,526,1,0,0,0,528,529,1,0,0,0,529,530,1,0,0,0,530,534,
	5,46,0,0,531,533,7,0,0,0,532,531,1,0,0,0,533,536,1,0,0,0,534,532,1,0,0,
	0,534,535,1,0,0,0,535,537,1,0,0,0,536,534,1,0,0,0,537,552,5,102,0,0,538,
	540,7,0,0,0,539,538,1,0,0,0,540,543,1,0,0,0,541,539,1,0,0,0,541,542,1,0,
	0,0,542,544,1,0,0,0,543,541,1,0,0,0,544,546,5,46,0,0,545,547,7,0,0,0,546,
	545,1,0,0,0,547,548,1,0,0,0,548,546,1,0,0,0,548,549,1,0,0,0,549,550,1,0,
	0,0,550,552,5,102,0,0,551,523,1,0,0,0,551,541,1,0,0,0,552,106,1,0,0,0,553,
	555,5,45,0,0,554,553,1,0,0,0,554,555,1,0,0,0,555,557,1,0,0,0,556,558,7,
	0,0,0,557,556,1,0,0,0,558,559,1,0,0,0,559,557,1,0,0,0,559,560,1,0,0,0,560,
	561,1,0,0,0,561,565,5,46,0,0,562,564,7,0,0,0,563,562,1,0,0,0,564,567,1,
	0,0,0,565,563,1,0,0,0,565,566,1,0,0,0,566,581,1,0,0,0,567,565,1,0,0,0,568,
	570,7,0,0,0,569,568,1,0,0,0,570,573,1,0,0,0,571,569,1,0,0,0,571,572,1,0,
	0,0,572,574,1,0,0,0,573,571,1,0,0,0,574,576,5,46,0,0,575,577,7,0,0,0,576,
	575,1,0,0,0,577,578,1,0,0,0,578,576,1,0,0,0,578,579,1,0,0,0,579,581,1,0,
	0,0,580,554,1,0,0,0,580,571,1,0,0,0,581,108,1,0,0,0,582,586,5,34,0,0,583,
	585,9,0,0,0,584,583,1,0,0,0,585,588,1,0,0,0,586,587,1,0,0,0,586,584,1,0,
	0,0,587,589,1,0,0,0,588,586,1,0,0,0,589,590,8,2,0,0,590,591,5,34,0,0,591,
	110,1,0,0,0,592,593,5,116,0,0,593,594,5,114,0,0,594,595,5,117,0,0,595,602,
	5,101,0,0,596,597,5,102,0,0,597,598,5,97,0,0,598,599,5,108,0,0,599,600,
	5,115,0,0,600,602,5,101,0,0,601,592,1,0,0,0,601,596,1,0,0,0,602,112,1,0,
	0,0,603,604,5,47,0,0,604,605,5,47,0,0,605,606,1,0,0,0,606,607,6,54,0,0,
	607,608,6,54,1,0,608,114,1,0,0,0,609,610,5,47,0,0,610,611,5,42,0,0,611,
	612,1,0,0,0,612,613,6,55,2,0,613,614,6,55,1,0,614,116,1,0,0,0,615,617,7,
	3,0,0,616,615,1,0,0,0,617,618,1,0,0,0,618,616,1,0,0,0,618,619,1,0,0,0,619,
	620,1,0,0,0,620,621,6,56,3,0,621,118,1,0,0,0,622,623,7,4,0,0,623,624,1,
	0,0,0,624,625,6,57,3,0,625,120,1,0,0,0,626,630,7,5,0,0,627,629,7,6,0,0,
	628,627,1,0,0,0,629,632,1,0,0,0,630,628,1,0,0,0,630,631,1,0,0,0,631,122,
	1,0,0,0,632,630,1,0,0,0,633,634,7,3,0,0,634,635,1,0,0,0,635,636,6,59,4,
	0,636,637,6,59,5,0,637,124,1,0,0,0,638,639,5,64,0,0,639,640,5,99,0,0,640,
	641,5,111,0,0,641,642,5,109,0,0,642,643,5,109,0,0,643,644,5,101,0,0,644,
	645,5,114,0,0,645,646,5,99,0,0,646,647,5,105,0,0,647,648,5,97,0,0,648,649,
	5,108,0,0,649,650,1,0,0,0,650,651,6,60,6,0,651,126,1,0,0,0,652,653,5,64,
	0,0,653,654,5,105,0,0,654,655,5,110,0,0,655,656,5,116,0,0,656,657,5,101,
	0,0,657,658,5,114,0,0,658,659,5,110,0,0,659,660,5,97,0,0,660,661,5,108,
	0,0,661,662,1,0,0,0,662,663,6,61,7,0,663,128,1,0,0,0,664,665,5,64,0,0,665,
	666,5,100,0,0,666,667,5,101,0,0,667,668,5,112,0,0,668,669,5,114,0,0,669,
	670,5,101,0,0,670,671,5,99,0,0,671,672,5,97,0,0,672,673,5,116,0,0,673,674,
	5,101,0,0,674,675,5,100,0,0,675,676,1,0,0,0,676,677,6,62,8,0,677,130,1,
	0,0,0,678,679,5,64,0,0,679,680,5,117,0,0,680,681,5,110,0,0,681,682,5,100,
	0,0,682,683,5,111,0,0,683,684,5,99,0,0,684,685,5,117,0,0,685,686,5,109,
	0,0,686,687,5,101,0,0,687,688,5,110,0,0,688,689,5,116,0,0,689,690,5,101,
	0,0,690,691,5,100,0,0,691,692,1,0,0,0,692,693,6,63,9,0,693,132,1,0,0,0,
	694,695,5,123,0,0,695,696,5,64,0,0,696,697,5,108,0,0,697,698,5,105,0,0,
	698,699,5,110,0,0,699,700,5,107,0,0,700,701,1,0,0,0,701,702,6,64,10,0,702,
	703,6,64,11,0,703,134,1,0,0,0,704,705,5,64,0,0,705,706,5,112,0,0,706,707,
	5,97,0,0,707,708,5,114,0,0,708,709,5,97,0,0,709,710,5,109,0,0,710,711,1,
	0,0,0,711,712,6,65,12,0,712,713,6,65,13,0,713,136,1,0,0,0,714,715,5,64,
	0,0,715,716,5,114,0,0,716,717,5,101,0,0,717,718,5,116,0,0,718,719,5,117,
	0,0,719,720,5,114,0,0,720,721,5,110,0,0,721,722,1,0,0,0,722,723,6,66,14,
	0,723,138,1,0,0,0,724,725,5,123,0,0,725,726,1,0,0,0,726,727,6,67,15,0,727,
	140,1,0,0,0,728,729,5,125,0,0,729,730,1,0,0,0,730,731,6,68,16,0,731,142,
	1,0,0,0,732,733,5,40,0,0,733,734,1,0,0,0,734,735,6,69,17,0,735,144,1,0,
	0,0,736,737,5,41,0,0,737,738,1,0,0,0,738,739,6,70,18,0,739,146,1,0,0,0,
	740,741,5,35,0,0,741,742,1,0,0,0,742,743,6,71,19,0,743,148,1,0,0,0,744,
	746,8,7,0,0,745,744,1,0,0,0,746,747,1,0,0,0,747,745,1,0,0,0,747,748,1,0,
	0,0,748,749,1,0,0,0,749,750,6,72,20,0,750,150,1,0,0,0,751,755,7,5,0,0,752,
	754,7,6,0,0,753,752,1,0,0,0,754,757,1,0,0,0,755,753,1,0,0,0,755,756,1,0,
	0,0,756,758,1,0,0,0,757,755,1,0,0,0,758,759,6,73,21,0,759,152,1,0,0,0,760,
	761,9,0,0,0,761,762,1,0,0,0,762,763,6,74,20,0,763,154,1,0,0,0,764,765,5,
	42,0,0,765,766,5,47,0,0,766,767,1,0,0,0,767,768,6,75,4,0,768,769,6,75,5,
	0,769,156,1,0,0,0,770,771,5,64,0,0,771,772,5,99,0,0,772,773,5,111,0,0,773,
	774,5,109,0,0,774,775,5,109,0,0,775,776,5,101,0,0,776,777,5,114,0,0,777,
	778,5,99,0,0,778,779,5,105,0,0,779,780,5,97,0,0,780,781,5,108,0,0,781,782,
	1,0,0,0,782,783,6,76,6,0,783,158,1,0,0,0,784,785,5,64,0,0,785,786,5,105,
	0,0,786,787,5,110,0,0,787,788,5,116,0,0,788,789,5,101,0,0,789,790,5,114,
	0,0,790,791,5,110,0,0,791,792,5,97,0,0,792,793,5,108,0,0,793,794,1,0,0,
	0,794,795,6,77,7,0,795,160,1,0,0,0,796,797,5,64,0,0,797,798,5,100,0,0,798,
	799,5,101,0,0,799,800,5,112,0,0,800,801,5,114,0,0,801,802,5,101,0,0,802,
	803,5,99,0,0,803,804,5,97,0,0,804,805,5,116,0,0,805,806,5,101,0,0,806,807,
	5,100,0,0,807,808,1,0,0,0,808,809,6,78,8,0,809,162,1,0,0,0,810,811,5,64,
	0,0,811,812,5,117,0,0,812,813,5,110,0,0,813,814,5,100,0,0,814,815,5,111,
	0,0,815,816,5,99,0,0,816,817,5,117,0,0,817,818,5,109,0,0,818,819,5,101,
	0,0,819,820,5,110,0,0,820,821,5,116,0,0,821,822,5,101,0,0,822,823,5,100,
	0,0,823,824,1,0,0,0,824,825,6,79,9,0,825,164,1,0,0,0,826,827,5,123,0,0,
	827,828,5,64,0,0,828,829,5,108,0,0,829,830,5,105,0,0,830,831,5,110,0,0,
	831,832,5,107,0,0,832,833,1,0,0,0,833,834,6,80,10,0,834,835,6,80,11,0,835,
	166,1,0,0,0,836,837,5,64,0,0,837,838,5,112,0,0,838,839,5,97,0,0,839,840,
	5,114,0,0,840,841,5,97,0,0,841,842,5,109,0,0,842,843,1,0,0,0,843,844,6,
	81,12,0,844,845,6,81,13,0,845,168,1,0,0,0,846,847,5,64,0,0,847,848,5,114,
	0,0,848,849,5,101,0,0,849,850,5,116,0,0,850,851,5,117,0,0,851,852,5,114,
	0,0,852,853,5,110,0,0,853,854,1,0,0,0,854,855,6,82,14,0,855,170,1,0,0,0,
	856,858,8,8,0,0,857,856,1,0,0,0,858,859,1,0,0,0,859,857,1,0,0,0,859,860,
	1,0,0,0,860,861,1,0,0,0,861,862,6,83,20,0,862,172,1,0,0,0,863,864,9,0,0,
	0,864,865,1,0,0,0,865,866,6,84,20,0,866,174,1,0,0,0,867,871,7,5,0,0,868,
	870,7,6,0,0,869,868,1,0,0,0,870,873,1,0,0,0,871,869,1,0,0,0,871,872,1,0,
	0,0,872,874,1,0,0,0,873,871,1,0,0,0,874,875,6,85,21,0,875,176,1,0,0,0,876,
	877,5,46,0,0,877,878,1,0,0,0,878,879,6,86,22,0,879,178,1,0,0,0,880,881,
	5,35,0,0,881,882,1,0,0,0,882,883,6,87,19,0,883,180,1,0,0,0,884,885,5,40,
	0,0,885,886,1,0,0,0,886,887,6,88,17,0,887,182,1,0,0,0,888,889,5,41,0,0,
	889,890,1,0,0,0,890,891,6,89,18,0,891,184,1,0,0,0,892,893,5,44,0,0,893,
	894,1,0,0,0,894,895,6,90,23,0,895,186,1,0,0,0,896,897,5,125,0,0,897,898,
	1,0,0,0,898,899,6,91,24,0,899,900,6,91,4,0,900,188,1,0,0,0,901,902,7,4,
	0,0,902,903,1,0,0,0,903,904,6,92,3,0,904,190,1,0,0,0,905,909,7,5,0,0,906,
	908,7,6,0,0,907,906,1,0,0,0,908,911,1,0,0,0,909,907,1,0,0,0,909,910,1,0,
	0,0,910,912,1,0,0,0,911,909,1,0,0,0,912,913,6,93,21,0,913,914,6,93,4,0,
	914,192,1,0,0,0,30,0,1,2,3,4,505,510,518,520,523,528,534,541,548,551,554,
	559,565,571,578,580,586,601,618,630,747,755,859,871,909,25,5,1,0,7,1,0,
	5,2,0,6,0,0,4,0,0,7,2,0,7,4,0,7,5,0,7,6,0,7,7,0,7,8,0,5,3,0,7,10,0,5,4,
	0,7,11,0,7,12,0,7,13,0,7,14,0,7,15,0,7,22,0,7,3,0,7,68,0,7,17,0,7,16,0,
	7,9,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!IdlLexer.__ATN) {
			IdlLexer.__ATN = new ATNDeserializer().deserialize(IdlLexer._serializedATN);
		}

		return IdlLexer.__ATN;
	}


	static DecisionsToDFA = IdlLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}