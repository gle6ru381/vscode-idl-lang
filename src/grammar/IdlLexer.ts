// Generated from ./grammar/IdlLexer.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class IdlLexer extends Lexer {
	public static readonly DOC_BEGIN = 1;
	public static readonly DOC_END = 2;
	public static readonly DOC_TEXT = 3;
	public static readonly DOC_INTERNAL = 4;
	public static readonly DOC_COMMERCIAL = 5;
	public static readonly DOC_DEPRECATED = 6;
	public static readonly DOC_UNDOCUMENTED = 7;
	public static readonly LBRACE = 8;
	public static readonly RBRACE = 9;
	public static readonly LPAREN = 10;
	public static readonly RPAREN = 11;
	public static readonly COMMA = 12;
	public static readonly DOT = 13;
	public static readonly COLON = 14;
	public static readonly SEMICOLON = 15;
	public static readonly LANGLE = 16;
	public static readonly RANGLE = 17;
	public static readonly CPP = 18;
	public static readonly JAVA = 19;
	public static readonly KMP = 20;
	public static readonly OBJC = 21;
	public static readonly SWIFT = 22;
	public static readonly DART = 23;
	public static readonly PROTOCONV = 24;
	public static readonly TYPE_PREFIX = 25;
	public static readonly IMPORT = 26;
	public static readonly CONST = 27;
	public static readonly OPTIONAL = 28;
	public static readonly BG_THREAD = 29;
	public static readonly ANY_THREAD = 30;
	public static readonly BASED_ON = 31;
	public static readonly SERIALIZABLE = 32;
	public static readonly ENUM = 33;
	public static readonly BITFIELD = 34;
	public static readonly VARIANT = 35;
	public static readonly STRUCT = 36;
	public static readonly LITE = 37;
	public static readonly OPTIONS = 38;
	public static readonly ABSTRACT = 39;
	public static readonly INTERFACE = 40;
	public static readonly VIRTUAL = 41;
	public static readonly VIEW_DELEGATE = 42;
	public static readonly WEAK_REF = 43;
	public static readonly SHARED_REF = 44;
	public static readonly GEN = 45;
	public static readonly READONLY = 46;
	public static readonly NATIVE = 47;
	public static readonly STATIC = 48;
	public static readonly LISTENER = 49;
	public static readonly LAMBDA = 50;
	public static readonly STRONG_REF = 51;
	public static readonly PLATFORM = 52;
	public static readonly ASSIGN = 53;
	public static readonly LSHIFT = 54;
	public static readonly BINOR = 55;
	public static readonly INT_LITERAL = 56;
	public static readonly FLOAT_LITERAL = 57;
	public static readonly DOUBLE_LITERAL = 58;
	public static readonly STR_LITERAL = 59;
	public static readonly BOOL_LITERAL = 60;
	public static readonly NEWLINE = 61;
	public static readonly SPACE = 62;
	public static readonly IDENTIFIER = 63;
	public static readonly SINGLE_COMMERCIAL = 64;
	public static readonly SINGLE_INTERNAL = 65;
	public static readonly SINGLE_DEPRECATED = 66;
	public static readonly SIGNLE_UNDOCUMENTED = 67;
	public static readonly MULTI_END_COMMENT = 68;
	public static readonly EOF = Token.EOF;
	public static readonly SINGLE_LINE_DOC = 1;
	public static readonly MULTI_LINE_DOC = 2;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, null, 
                                                            "'{'", "'}'", 
                                                            "'('", "')'", 
                                                            "','", "'.'", 
                                                            "':'", "';'", 
                                                            "'<'", "'>'", 
                                                            "'cpp'", "'java'", 
                                                            "'kmp'", "'objc'", 
                                                            "'swift'", "'dart'", 
                                                            "'protoconv'", 
                                                            "'type_prefix'", 
                                                            "'import'", 
                                                            "'const'", "'optional'", 
                                                            "'bg_thread'", 
                                                            "'any_thread'", 
                                                            "'based on'", 
                                                            "'serializable'", 
                                                            "'enum'", "'bitfield'", 
                                                            "'variant'", 
                                                            "'struct'", 
                                                            "'lite'", "'options'", 
                                                            "'abstract'", 
                                                            "'interface'", 
                                                            "'virtual'", 
                                                            "'view_delegate'", 
                                                            "'weak_ref'", 
                                                            "'shared_ref'", 
                                                            "'gen'", "'readonly'", 
                                                            "'native'", 
                                                            "'static'", 
                                                            "'listener'", 
                                                            "'lambda'", 
                                                            "'strong_ref'", 
                                                            "'platform'", 
                                                            "'='", "'<<'", 
                                                            "'|'", null, 
                                                            null, null, 
                                                            null, null, 
                                                            null, "' '", 
                                                            null, null, 
                                                            null, null, 
                                                            null, "'*/'" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "DOC_BEGIN", 
                                                             "DOC_END", 
                                                             "DOC_TEXT", 
                                                             "DOC_INTERNAL", 
                                                             "DOC_COMMERCIAL", 
                                                             "DOC_DEPRECATED", 
                                                             "DOC_UNDOCUMENTED", 
                                                             "LBRACE", "RBRACE", 
                                                             "LPAREN", "RPAREN", 
                                                             "COMMA", "DOT", 
                                                             "COLON", "SEMICOLON", 
                                                             "LANGLE", "RANGLE", 
                                                             "CPP", "JAVA", 
                                                             "KMP", "OBJC", 
                                                             "SWIFT", "DART", 
                                                             "PROTOCONV", 
                                                             "TYPE_PREFIX", 
                                                             "IMPORT", "CONST", 
                                                             "OPTIONAL", 
                                                             "BG_THREAD", 
                                                             "ANY_THREAD", 
                                                             "BASED_ON", 
                                                             "SERIALIZABLE", 
                                                             "ENUM", "BITFIELD", 
                                                             "VARIANT", 
                                                             "STRUCT", "LITE", 
                                                             "OPTIONS", 
                                                             "ABSTRACT", 
                                                             "INTERFACE", 
                                                             "VIRTUAL", 
                                                             "VIEW_DELEGATE", 
                                                             "WEAK_REF", 
                                                             "SHARED_REF", 
                                                             "GEN", "READONLY", 
                                                             "NATIVE", "STATIC", 
                                                             "LISTENER", 
                                                             "LAMBDA", "STRONG_REF", 
                                                             "PLATFORM", 
                                                             "ASSIGN", "LSHIFT", 
                                                             "BINOR", "INT_LITERAL", 
                                                             "FLOAT_LITERAL", 
                                                             "DOUBLE_LITERAL", 
                                                             "STR_LITERAL", 
                                                             "BOOL_LITERAL", 
                                                             "NEWLINE", 
                                                             "SPACE", "IDENTIFIER", 
                                                             "SINGLE_COMMERCIAL", 
                                                             "SINGLE_INTERNAL", 
                                                             "SINGLE_DEPRECATED", 
                                                             "SIGNLE_UNDOCUMENTED", 
                                                             "MULTI_END_COMMENT" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", "SINGLE_LINE_DOC", 
                                                "MULTI_LINE_DOC", ];

	public static readonly ruleNames: string[] = [
		"LBRACE", "RBRACE", "LPAREN", "RPAREN", "COMMA", "DOT", "COLON", "SEMICOLON", 
		"LANGLE", "RANGLE", "CPP", "JAVA", "KMP", "OBJC", "SWIFT", "DART", "PROTOCONV", 
		"TYPE_PREFIX", "IMPORT", "CONST", "OPTIONAL", "BG_THREAD", "ANY_THREAD", 
		"BASED_ON", "SERIALIZABLE", "ENUM", "BITFIELD", "VARIANT", "STRUCT", "LITE", 
		"OPTIONS", "ABSTRACT", "INTERFACE", "VIRTUAL", "VIEW_DELEGATE", "WEAK_REF", 
		"SHARED_REF", "GEN", "READONLY", "NATIVE", "STATIC", "LISTENER", "LAMBDA", 
		"STRONG_REF", "PLATFORM", "ASSIGN", "LSHIFT", "BINOR", "INT_LITERAL", 
		"FLOAT_LITERAL", "DOUBLE_LITERAL", "STR_LITERAL", "BOOL_LITERAL", "SINGLE_LINE_DOC_BEGIN", 
		"MULTI_LINE_DOC_BEGIN", "NEWLINE", "SPACE", "IDENTIFIER", "SINGLE_END_COMMENT", 
		"SINGLE_COMMERCIAL", "SINGLE_INTERNAL", "SINGLE_DEPRECATED", "SIGNLE_UNDOCUMENTED", 
		"SINGLE_TEXT", "SIGNLE_SYMBOL", "MULTI_END_COMMENT", "MULTI_COMMERCIAL", 
		"MULTI_INTERNAL", "MULTI_DEPRECATED", "MULTI_UNDOCUMENTED", "MULTI_TEXT", 
		"MULTI_SYMBOL",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, IdlLexer._ATN, IdlLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "IdlLexer.g4"; }

	public get literalNames(): (string | null)[] { return IdlLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return IdlLexer.symbolicNames; }
	public get ruleNames(): string[] { return IdlLexer.ruleNames; }

	public get serializedATN(): number[] { return IdlLexer._serializedATN; }

	public get channelNames(): string[] { return IdlLexer.channelNames; }

	public get modeNames(): string[] { return IdlLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,68,730,6,-1,6,-1,
	6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,
	8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,
	15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,
	2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,
	30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,
	7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,
	44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,
	2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,58,2,
	59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,65,7,65,2,66,
	7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,71,1,0,1,0,1,1,1,1,
	1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,
	10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,13,1,13,1,13,
	1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,16,1,
	16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,
	1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,
	19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,
	22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
	1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,
	25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,
	1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,
	29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,
	1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,
	32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,34,
	1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,
	35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,
	1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,
	39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,
	1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,
	43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,
	1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,46,1,46,1,46,1,47,1,47,1,48,3,48,458,
	8,48,1,48,4,48,461,8,48,11,48,12,48,462,1,48,1,48,1,48,1,48,4,48,469,8,
	48,11,48,12,48,470,3,48,473,8,48,1,49,3,49,476,8,49,1,49,4,49,479,8,49,
	11,49,12,49,480,1,49,1,49,5,49,485,8,49,10,49,12,49,488,9,49,1,49,1,49,
	5,49,492,8,49,10,49,12,49,495,9,49,1,49,1,49,4,49,499,8,49,11,49,12,49,
	500,1,49,3,49,504,8,49,1,50,3,50,507,8,50,1,50,4,50,510,8,50,11,50,12,50,
	511,1,50,1,50,5,50,516,8,50,10,50,12,50,519,9,50,1,50,5,50,522,8,50,10,
	50,12,50,525,9,50,1,50,1,50,4,50,529,8,50,11,50,12,50,530,3,50,533,8,50,
	1,51,1,51,5,51,537,8,51,10,51,12,51,540,9,51,1,51,1,51,1,51,1,52,1,52,1,
	52,1,52,1,52,1,52,1,52,1,52,1,52,3,52,554,8,52,1,53,1,53,1,53,1,53,1,53,
	1,53,1,54,1,54,1,54,1,54,1,54,1,54,1,55,4,55,569,8,55,11,55,12,55,570,1,
	55,1,55,1,56,1,56,1,56,1,56,1,57,1,57,5,57,581,8,57,10,57,12,57,584,9,57,
	1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,
	59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,
	1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,1,
	61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,62,
	1,62,1,62,1,62,1,63,4,63,648,8,63,11,63,12,63,649,1,63,1,63,1,64,1,64,1,
	64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,66,
	1,66,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,
	67,1,67,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,
	1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,
	69,1,69,1,69,1,69,1,69,1,69,1,70,4,70,721,8,70,11,70,12,70,722,1,70,1,70,
	1,71,1,71,1,71,1,71,1,538,0,72,3,8,5,9,7,10,9,11,11,12,13,13,15,14,17,15,
	19,16,21,17,23,18,25,19,27,20,29,21,31,22,33,23,35,24,37,25,39,26,41,27,
	43,28,45,29,47,30,49,31,51,32,53,33,55,34,57,35,59,36,61,37,63,38,65,39,
	67,40,69,41,71,42,73,43,75,44,77,45,79,46,81,47,83,48,85,49,87,50,89,51,
	91,52,93,53,95,54,97,55,99,56,101,57,103,58,105,59,107,60,109,0,111,0,113,
	61,115,62,117,63,119,0,121,64,123,65,125,66,127,67,129,0,131,0,133,68,135,
	0,137,0,139,0,141,0,143,0,145,0,3,0,1,2,8,1,0,48,57,3,0,48,57,65,70,97,
	102,1,0,92,92,2,0,10,10,13,13,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,
	95,97,122,3,0,10,10,13,13,64,64,5,0,10,10,13,13,40,42,47,47,64,64,749,0,
	3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,
	0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
	0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
	0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,
	0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,
	0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,
	0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,
	0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,
	0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,
	0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
	113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,1,119,1,0,0,0,1,121,1,0,0,0,1,123,
	1,0,0,0,1,125,1,0,0,0,1,127,1,0,0,0,1,129,1,0,0,0,1,131,1,0,0,0,2,133,1,
	0,0,0,2,135,1,0,0,0,2,137,1,0,0,0,2,139,1,0,0,0,2,141,1,0,0,0,2,143,1,0,
	0,0,2,145,1,0,0,0,3,147,1,0,0,0,5,149,1,0,0,0,7,151,1,0,0,0,9,153,1,0,0,
	0,11,155,1,0,0,0,13,157,1,0,0,0,15,159,1,0,0,0,17,161,1,0,0,0,19,163,1,
	0,0,0,21,165,1,0,0,0,23,167,1,0,0,0,25,171,1,0,0,0,27,176,1,0,0,0,29,180,
	1,0,0,0,31,185,1,0,0,0,33,191,1,0,0,0,35,196,1,0,0,0,37,206,1,0,0,0,39,
	218,1,0,0,0,41,225,1,0,0,0,43,231,1,0,0,0,45,240,1,0,0,0,47,250,1,0,0,0,
	49,261,1,0,0,0,51,270,1,0,0,0,53,283,1,0,0,0,55,288,1,0,0,0,57,297,1,0,
	0,0,59,305,1,0,0,0,61,312,1,0,0,0,63,317,1,0,0,0,65,325,1,0,0,0,67,334,
	1,0,0,0,69,344,1,0,0,0,71,352,1,0,0,0,73,366,1,0,0,0,75,375,1,0,0,0,77,
	386,1,0,0,0,79,390,1,0,0,0,81,399,1,0,0,0,83,406,1,0,0,0,85,413,1,0,0,0,
	87,422,1,0,0,0,89,429,1,0,0,0,91,440,1,0,0,0,93,449,1,0,0,0,95,451,1,0,
	0,0,97,454,1,0,0,0,99,472,1,0,0,0,101,503,1,0,0,0,103,532,1,0,0,0,105,534,
	1,0,0,0,107,553,1,0,0,0,109,555,1,0,0,0,111,561,1,0,0,0,113,568,1,0,0,0,
	115,574,1,0,0,0,117,578,1,0,0,0,119,585,1,0,0,0,121,590,1,0,0,0,123,604,
	1,0,0,0,125,616,1,0,0,0,127,630,1,0,0,0,129,647,1,0,0,0,131,653,1,0,0,0,
	133,657,1,0,0,0,135,663,1,0,0,0,137,677,1,0,0,0,139,689,1,0,0,0,141,703,
	1,0,0,0,143,720,1,0,0,0,145,726,1,0,0,0,147,148,5,123,0,0,148,4,1,0,0,0,
	149,150,5,125,0,0,150,6,1,0,0,0,151,152,5,40,0,0,152,8,1,0,0,0,153,154,
	5,41,0,0,154,10,1,0,0,0,155,156,5,44,0,0,156,12,1,0,0,0,157,158,5,46,0,
	0,158,14,1,0,0,0,159,160,5,58,0,0,160,16,1,0,0,0,161,162,5,59,0,0,162,18,
	1,0,0,0,163,164,5,60,0,0,164,20,1,0,0,0,165,166,5,62,0,0,166,22,1,0,0,0,
	167,168,5,99,0,0,168,169,5,112,0,0,169,170,5,112,0,0,170,24,1,0,0,0,171,
	172,5,106,0,0,172,173,5,97,0,0,173,174,5,118,0,0,174,175,5,97,0,0,175,26,
	1,0,0,0,176,177,5,107,0,0,177,178,5,109,0,0,178,179,5,112,0,0,179,28,1,
	0,0,0,180,181,5,111,0,0,181,182,5,98,0,0,182,183,5,106,0,0,183,184,5,99,
	0,0,184,30,1,0,0,0,185,186,5,115,0,0,186,187,5,119,0,0,187,188,5,105,0,
	0,188,189,5,102,0,0,189,190,5,116,0,0,190,32,1,0,0,0,191,192,5,100,0,0,
	192,193,5,97,0,0,193,194,5,114,0,0,194,195,5,116,0,0,195,34,1,0,0,0,196,
	197,5,112,0,0,197,198,5,114,0,0,198,199,5,111,0,0,199,200,5,116,0,0,200,
	201,5,111,0,0,201,202,5,99,0,0,202,203,5,111,0,0,203,204,5,110,0,0,204,
	205,5,118,0,0,205,36,1,0,0,0,206,207,5,116,0,0,207,208,5,121,0,0,208,209,
	5,112,0,0,209,210,5,101,0,0,210,211,5,95,0,0,211,212,5,112,0,0,212,213,
	5,114,0,0,213,214,5,101,0,0,214,215,5,102,0,0,215,216,5,105,0,0,216,217,
	5,120,0,0,217,38,1,0,0,0,218,219,5,105,0,0,219,220,5,109,0,0,220,221,5,
	112,0,0,221,222,5,111,0,0,222,223,5,114,0,0,223,224,5,116,0,0,224,40,1,
	0,0,0,225,226,5,99,0,0,226,227,5,111,0,0,227,228,5,110,0,0,228,229,5,115,
	0,0,229,230,5,116,0,0,230,42,1,0,0,0,231,232,5,111,0,0,232,233,5,112,0,
	0,233,234,5,116,0,0,234,235,5,105,0,0,235,236,5,111,0,0,236,237,5,110,0,
	0,237,238,5,97,0,0,238,239,5,108,0,0,239,44,1,0,0,0,240,241,5,98,0,0,241,
	242,5,103,0,0,242,243,5,95,0,0,243,244,5,116,0,0,244,245,5,104,0,0,245,
	246,5,114,0,0,246,247,5,101,0,0,247,248,5,97,0,0,248,249,5,100,0,0,249,
	46,1,0,0,0,250,251,5,97,0,0,251,252,5,110,0,0,252,253,5,121,0,0,253,254,
	5,95,0,0,254,255,5,116,0,0,255,256,5,104,0,0,256,257,5,114,0,0,257,258,
	5,101,0,0,258,259,5,97,0,0,259,260,5,100,0,0,260,48,1,0,0,0,261,262,5,98,
	0,0,262,263,5,97,0,0,263,264,5,115,0,0,264,265,5,101,0,0,265,266,5,100,
	0,0,266,267,5,32,0,0,267,268,5,111,0,0,268,269,5,110,0,0,269,50,1,0,0,0,
	270,271,5,115,0,0,271,272,5,101,0,0,272,273,5,114,0,0,273,274,5,105,0,0,
	274,275,5,97,0,0,275,276,5,108,0,0,276,277,5,105,0,0,277,278,5,122,0,0,
	278,279,5,97,0,0,279,280,5,98,0,0,280,281,5,108,0,0,281,282,5,101,0,0,282,
	52,1,0,0,0,283,284,5,101,0,0,284,285,5,110,0,0,285,286,5,117,0,0,286,287,
	5,109,0,0,287,54,1,0,0,0,288,289,5,98,0,0,289,290,5,105,0,0,290,291,5,116,
	0,0,291,292,5,102,0,0,292,293,5,105,0,0,293,294,5,101,0,0,294,295,5,108,
	0,0,295,296,5,100,0,0,296,56,1,0,0,0,297,298,5,118,0,0,298,299,5,97,0,0,
	299,300,5,114,0,0,300,301,5,105,0,0,301,302,5,97,0,0,302,303,5,110,0,0,
	303,304,5,116,0,0,304,58,1,0,0,0,305,306,5,115,0,0,306,307,5,116,0,0,307,
	308,5,114,0,0,308,309,5,117,0,0,309,310,5,99,0,0,310,311,5,116,0,0,311,
	60,1,0,0,0,312,313,5,108,0,0,313,314,5,105,0,0,314,315,5,116,0,0,315,316,
	5,101,0,0,316,62,1,0,0,0,317,318,5,111,0,0,318,319,5,112,0,0,319,320,5,
	116,0,0,320,321,5,105,0,0,321,322,5,111,0,0,322,323,5,110,0,0,323,324,5,
	115,0,0,324,64,1,0,0,0,325,326,5,97,0,0,326,327,5,98,0,0,327,328,5,115,
	0,0,328,329,5,116,0,0,329,330,5,114,0,0,330,331,5,97,0,0,331,332,5,99,0,
	0,332,333,5,116,0,0,333,66,1,0,0,0,334,335,5,105,0,0,335,336,5,110,0,0,
	336,337,5,116,0,0,337,338,5,101,0,0,338,339,5,114,0,0,339,340,5,102,0,0,
	340,341,5,97,0,0,341,342,5,99,0,0,342,343,5,101,0,0,343,68,1,0,0,0,344,
	345,5,118,0,0,345,346,5,105,0,0,346,347,5,114,0,0,347,348,5,116,0,0,348,
	349,5,117,0,0,349,350,5,97,0,0,350,351,5,108,0,0,351,70,1,0,0,0,352,353,
	5,118,0,0,353,354,5,105,0,0,354,355,5,101,0,0,355,356,5,119,0,0,356,357,
	5,95,0,0,357,358,5,100,0,0,358,359,5,101,0,0,359,360,5,108,0,0,360,361,
	5,101,0,0,361,362,5,103,0,0,362,363,5,97,0,0,363,364,5,116,0,0,364,365,
	5,101,0,0,365,72,1,0,0,0,366,367,5,119,0,0,367,368,5,101,0,0,368,369,5,
	97,0,0,369,370,5,107,0,0,370,371,5,95,0,0,371,372,5,114,0,0,372,373,5,101,
	0,0,373,374,5,102,0,0,374,74,1,0,0,0,375,376,5,115,0,0,376,377,5,104,0,
	0,377,378,5,97,0,0,378,379,5,114,0,0,379,380,5,101,0,0,380,381,5,100,0,
	0,381,382,5,95,0,0,382,383,5,114,0,0,383,384,5,101,0,0,384,385,5,102,0,
	0,385,76,1,0,0,0,386,387,5,103,0,0,387,388,5,101,0,0,388,389,5,110,0,0,
	389,78,1,0,0,0,390,391,5,114,0,0,391,392,5,101,0,0,392,393,5,97,0,0,393,
	394,5,100,0,0,394,395,5,111,0,0,395,396,5,110,0,0,396,397,5,108,0,0,397,
	398,5,121,0,0,398,80,1,0,0,0,399,400,5,110,0,0,400,401,5,97,0,0,401,402,
	5,116,0,0,402,403,5,105,0,0,403,404,5,118,0,0,404,405,5,101,0,0,405,82,
	1,0,0,0,406,407,5,115,0,0,407,408,5,116,0,0,408,409,5,97,0,0,409,410,5,
	116,0,0,410,411,5,105,0,0,411,412,5,99,0,0,412,84,1,0,0,0,413,414,5,108,
	0,0,414,415,5,105,0,0,415,416,5,115,0,0,416,417,5,116,0,0,417,418,5,101,
	0,0,418,419,5,110,0,0,419,420,5,101,0,0,420,421,5,114,0,0,421,86,1,0,0,
	0,422,423,5,108,0,0,423,424,5,97,0,0,424,425,5,109,0,0,425,426,5,98,0,0,
	426,427,5,100,0,0,427,428,5,97,0,0,428,88,1,0,0,0,429,430,5,115,0,0,430,
	431,5,116,0,0,431,432,5,114,0,0,432,433,5,111,0,0,433,434,5,110,0,0,434,
	435,5,103,0,0,435,436,5,95,0,0,436,437,5,114,0,0,437,438,5,101,0,0,438,
	439,5,102,0,0,439,90,1,0,0,0,440,441,5,112,0,0,441,442,5,108,0,0,442,443,
	5,97,0,0,443,444,5,116,0,0,444,445,5,102,0,0,445,446,5,111,0,0,446,447,
	5,114,0,0,447,448,5,109,0,0,448,92,1,0,0,0,449,450,5,61,0,0,450,94,1,0,
	0,0,451,452,5,60,0,0,452,453,5,60,0,0,453,96,1,0,0,0,454,455,5,124,0,0,
	455,98,1,0,0,0,456,458,5,45,0,0,457,456,1,0,0,0,457,458,1,0,0,0,458,460,
	1,0,0,0,459,461,7,0,0,0,460,459,1,0,0,0,461,462,1,0,0,0,462,460,1,0,0,0,
	462,463,1,0,0,0,463,473,1,0,0,0,464,465,5,48,0,0,465,466,5,120,0,0,466,
	468,1,0,0,0,467,469,7,1,0,0,468,467,1,0,0,0,469,470,1,0,0,0,470,468,1,0,
	0,0,470,471,1,0,0,0,471,473,1,0,0,0,472,457,1,0,0,0,472,464,1,0,0,0,473,
	100,1,0,0,0,474,476,5,45,0,0,475,474,1,0,0,0,475,476,1,0,0,0,476,478,1,
	0,0,0,477,479,7,0,0,0,478,477,1,0,0,0,479,480,1,0,0,0,480,478,1,0,0,0,480,
	481,1,0,0,0,481,482,1,0,0,0,482,486,5,46,0,0,483,485,7,0,0,0,484,483,1,
	0,0,0,485,488,1,0,0,0,486,484,1,0,0,0,486,487,1,0,0,0,487,489,1,0,0,0,488,
	486,1,0,0,0,489,504,5,102,0,0,490,492,7,0,0,0,491,490,1,0,0,0,492,495,1,
	0,0,0,493,491,1,0,0,0,493,494,1,0,0,0,494,496,1,0,0,0,495,493,1,0,0,0,496,
	498,5,46,0,0,497,499,7,0,0,0,498,497,1,0,0,0,499,500,1,0,0,0,500,498,1,
	0,0,0,500,501,1,0,0,0,501,502,1,0,0,0,502,504,5,102,0,0,503,475,1,0,0,0,
	503,493,1,0,0,0,504,102,1,0,0,0,505,507,5,45,0,0,506,505,1,0,0,0,506,507,
	1,0,0,0,507,509,1,0,0,0,508,510,7,0,0,0,509,508,1,0,0,0,510,511,1,0,0,0,
	511,509,1,0,0,0,511,512,1,0,0,0,512,513,1,0,0,0,513,517,5,46,0,0,514,516,
	7,0,0,0,515,514,1,0,0,0,516,519,1,0,0,0,517,515,1,0,0,0,517,518,1,0,0,0,
	518,533,1,0,0,0,519,517,1,0,0,0,520,522,7,0,0,0,521,520,1,0,0,0,522,525,
	1,0,0,0,523,521,1,0,0,0,523,524,1,0,0,0,524,526,1,0,0,0,525,523,1,0,0,0,
	526,528,5,46,0,0,527,529,7,0,0,0,528,527,1,0,0,0,529,530,1,0,0,0,530,528,
	1,0,0,0,530,531,1,0,0,0,531,533,1,0,0,0,532,506,1,0,0,0,532,523,1,0,0,0,
	533,104,1,0,0,0,534,538,5,34,0,0,535,537,9,0,0,0,536,535,1,0,0,0,537,540,
	1,0,0,0,538,539,1,0,0,0,538,536,1,0,0,0,539,541,1,0,0,0,540,538,1,0,0,0,
	541,542,8,2,0,0,542,543,5,34,0,0,543,106,1,0,0,0,544,545,5,116,0,0,545,
	546,5,114,0,0,546,547,5,117,0,0,547,554,5,101,0,0,548,549,5,102,0,0,549,
	550,5,97,0,0,550,551,5,108,0,0,551,552,5,115,0,0,552,554,5,101,0,0,553,
	544,1,0,0,0,553,548,1,0,0,0,554,108,1,0,0,0,555,556,5,47,0,0,556,557,5,
	47,0,0,557,558,1,0,0,0,558,559,6,53,0,0,559,560,6,53,1,0,560,110,1,0,0,
	0,561,562,5,47,0,0,562,563,5,42,0,0,563,564,1,0,0,0,564,565,6,54,2,0,565,
	566,6,54,1,0,566,112,1,0,0,0,567,569,7,3,0,0,568,567,1,0,0,0,569,570,1,
	0,0,0,570,568,1,0,0,0,570,571,1,0,0,0,571,572,1,0,0,0,572,573,6,55,3,0,
	573,114,1,0,0,0,574,575,5,32,0,0,575,576,1,0,0,0,576,577,6,56,3,0,577,116,
	1,0,0,0,578,582,7,4,0,0,579,581,7,5,0,0,580,579,1,0,0,0,581,584,1,0,0,0,
	582,580,1,0,0,0,582,583,1,0,0,0,583,118,1,0,0,0,584,582,1,0,0,0,585,586,
	7,3,0,0,586,587,1,0,0,0,587,588,6,58,4,0,588,589,6,58,5,0,589,120,1,0,0,
	0,590,591,5,64,0,0,591,592,5,99,0,0,592,593,5,111,0,0,593,594,5,109,0,0,
	594,595,5,109,0,0,595,596,5,101,0,0,596,597,5,114,0,0,597,598,5,99,0,0,
	598,599,5,105,0,0,599,600,5,97,0,0,600,601,5,108,0,0,601,602,1,0,0,0,602,
	603,6,59,6,0,603,122,1,0,0,0,604,605,5,64,0,0,605,606,5,105,0,0,606,607,
	5,110,0,0,607,608,5,116,0,0,608,609,5,101,0,0,609,610,5,114,0,0,610,611,
	5,110,0,0,611,612,5,97,0,0,612,613,5,108,0,0,613,614,1,0,0,0,614,615,6,
	60,7,0,615,124,1,0,0,0,616,617,5,64,0,0,617,618,5,100,0,0,618,619,5,101,
	0,0,619,620,5,112,0,0,620,621,5,114,0,0,621,622,5,101,0,0,622,623,5,99,
	0,0,623,624,5,97,0,0,624,625,5,116,0,0,625,626,5,101,0,0,626,627,5,100,
	0,0,627,628,1,0,0,0,628,629,6,61,8,0,629,126,1,0,0,0,630,631,5,64,0,0,631,
	632,5,117,0,0,632,633,5,110,0,0,633,634,5,100,0,0,634,635,5,111,0,0,635,
	636,5,99,0,0,636,637,5,117,0,0,637,638,5,109,0,0,638,639,5,101,0,0,639,
	640,5,110,0,0,640,641,5,116,0,0,641,642,5,101,0,0,642,643,5,100,0,0,643,
	644,1,0,0,0,644,645,6,62,9,0,645,128,1,0,0,0,646,648,8,6,0,0,647,646,1,
	0,0,0,648,649,1,0,0,0,649,647,1,0,0,0,649,650,1,0,0,0,650,651,1,0,0,0,651,
	652,6,63,10,0,652,130,1,0,0,0,653,654,9,0,0,0,654,655,1,0,0,0,655,656,6,
	64,10,0,656,132,1,0,0,0,657,658,5,42,0,0,658,659,5,47,0,0,659,660,1,0,0,
	0,660,661,6,65,4,0,661,662,6,65,5,0,662,134,1,0,0,0,663,664,5,64,0,0,664,
	665,5,99,0,0,665,666,5,111,0,0,666,667,5,109,0,0,667,668,5,109,0,0,668,
	669,5,101,0,0,669,670,5,114,0,0,670,671,5,99,0,0,671,672,5,105,0,0,672,
	673,5,97,0,0,673,674,5,108,0,0,674,675,1,0,0,0,675,676,6,66,6,0,676,136,
	1,0,0,0,677,678,5,64,0,0,678,679,5,105,0,0,679,680,5,110,0,0,680,681,5,
	116,0,0,681,682,5,101,0,0,682,683,5,114,0,0,683,684,5,110,0,0,684,685,5,
	97,0,0,685,686,5,108,0,0,686,687,1,0,0,0,687,688,6,67,7,0,688,138,1,0,0,
	0,689,690,5,64,0,0,690,691,5,100,0,0,691,692,5,101,0,0,692,693,5,112,0,
	0,693,694,5,114,0,0,694,695,5,101,0,0,695,696,5,99,0,0,696,697,5,97,0,0,
	697,698,5,116,0,0,698,699,5,101,0,0,699,700,5,100,0,0,700,701,1,0,0,0,701,
	702,6,68,8,0,702,140,1,0,0,0,703,704,5,64,0,0,704,705,5,117,0,0,705,706,
	5,110,0,0,706,707,5,100,0,0,707,708,5,111,0,0,708,709,5,99,0,0,709,710,
	5,117,0,0,710,711,5,109,0,0,711,712,5,101,0,0,712,713,5,110,0,0,713,714,
	5,116,0,0,714,715,5,101,0,0,715,716,5,100,0,0,716,717,1,0,0,0,717,718,6,
	69,9,0,718,142,1,0,0,0,719,721,8,7,0,0,720,719,1,0,0,0,721,722,1,0,0,0,
	722,720,1,0,0,0,722,723,1,0,0,0,723,724,1,0,0,0,724,725,6,70,10,0,725,144,
	1,0,0,0,726,727,9,0,0,0,727,728,1,0,0,0,728,729,6,71,10,0,729,146,1,0,0,
	0,25,0,1,2,457,462,470,472,475,480,486,493,500,503,506,511,517,523,530,
	532,538,553,570,582,649,722,11,5,1,0,7,1,0,5,2,0,6,0,0,4,0,0,7,2,0,7,5,
	0,7,4,0,7,6,0,7,7,0,7,3,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!IdlLexer.__ATN) {
			IdlLexer.__ATN = new ATNDeserializer().deserialize(IdlLexer._serializedATN);
		}

		return IdlLexer.__ATN;
	}


	static DecisionsToDFA = IdlLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}